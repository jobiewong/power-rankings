import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import { useEffect, useState } from "react";
import OverflowGrid from "~/components/OverflowGrid";
import RankingsGrid from "~/components/RankingsGrid";
import { Separator } from "~/components/ui/separator";
import { generateData } from "~/utils/utils";

import type { ExampleData } from "~/types/datatypes";
import { api } from "~/utils/api";

export default function Home() {
  const [data, setData] = useState<ExampleData[]>([]);
  const [listData, setListData] = useState<string[]>([]);

  useEffect(() => {
    setData(generateData(10));
  }, []);

  useEffect(() => {
    console.log(data.map((item) => item.name));
    setListData(data.map((item) => item.uuid));
  }, [data]);

  return (
    <>
      <Head>
        <title>Power Rankings</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className=" bg-platchat-background flex min-h-screen flex-col items-center justify-center">
        <div className="container flex flex-col items-center justify-center px-4 py-16">
          <div className="flex flex-col items-center gap-1">
            <h3 className="text-platchat-primary text-xl font-light uppercase">
              Platchat Valorant
            </h3>
            <Separator className="h-[2px]" />
            <h1 className="text-3xl font-bold uppercase text-white">
              Power Rankings
            </h1>
          </div>
          <div className="preview mt-8 w-full px-8 md:w-[48rem] md:px-0">
            <RankingsGrid
              data={data}
              listItems={listData}
              setListItems={setListData}
            />
            <OverflowGrid />
          </div>
        </div>
      </main>
    </>
  );
}

// function AuthShowcase() {
//   const { data: sessionData } = useSession();

//   const { data: secretMessage } = api.example.getSecretMessage.useQuery(
//     undefined, // no input
//     { enabled: sessionData?.user !== undefined }
//   );

//   return (
//     <div className="flex flex-col items-center justify-center gap-4">
//       <p className="text-center text-2xl text-white">
//         {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
//         {secretMessage && <span> - {secretMessage}</span>}
//       </p>
//       <button
//         className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
//         onClick={sessionData ? () => void signOut() : () => void signIn()}
//       >
//         {sessionData ? "Sign out" : "Sign in"}
//       </button>
//     </div>
//   );
// }
